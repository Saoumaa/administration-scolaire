/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scolaire.ihm;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author obama
 */
public class GroupePadagJFrame_autre extends javax.swing.JFrame {

    /**
     * Creates new form AnneeJFrame
     */
    public GroupePadagJFrame_autre() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("log.png")));
//        affichetableSerie();
//        affichetablePromotion();
        affichetableGp();
        connectComboPromotion();
        connectComboSerie();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelEntete = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelChamps3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        groupePedagTable = new javax.swing.JTable();
        jPanelChamps4 = new javax.swing.JPanel();
        jPanelBoutons1 = new javax.swing.JPanel();
        jButtonNouveau1 = new javax.swing.JButton();
        jButtonEnregistrer2 = new javax.swing.JButton();
        buttonModifierCycle1 = new javax.swing.JButton();
        jButtonSupprimer2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        serieComboBox = new javax.swing.JComboBox();
        promotionComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        libelleGp = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        abrevGP = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanelEntete.setBackground(new java.awt.Color(0, 102, 51));

        jLabel1.setFont(new java.awt.Font("Wide Latin", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GROUPE PEDAGOGIQUE");

        javax.swing.GroupLayout jPanelEnteteLayout = new javax.swing.GroupLayout(jPanelEntete);
        jPanelEntete.setLayout(jPanelEnteteLayout);
        jPanelEnteteLayout.setHorizontalGroup(
            jPanelEnteteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnteteLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelEnteteLayout.setVerticalGroup(
            jPanelEnteteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnteteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelChamps3.setBackground(new java.awt.Color(204, 255, 204));
        jPanelChamps3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Liste des groupes pédagogiques", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 51))); // NOI18N

        groupePedagTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Code", "Abréviation", "Libellé"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        groupePedagTable.setColumnSelectionAllowed(true);
        groupePedagTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                groupePedagTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(groupePedagTable);
        groupePedagTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanelChamps3Layout = new javax.swing.GroupLayout(jPanelChamps3);
        jPanelChamps3.setLayout(jPanelChamps3Layout);
        jPanelChamps3Layout.setHorizontalGroup(
            jPanelChamps3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelChamps3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanelChamps3Layout.setVerticalGroup(
            jPanelChamps3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelChamps3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelChamps4.setBackground(new java.awt.Color(204, 255, 204));
        jPanelChamps4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Groupe Pédagogique", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 51))); // NOI18N

        jPanelBoutons1.setBackground(new java.awt.Color(204, 255, 204));
        jPanelBoutons1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Actions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 51))); // NOI18N

        jButtonNouveau1.setText("Nouveau");
        jButtonNouveau1.setMaximumSize(new java.awt.Dimension(85, 23));
        jButtonNouveau1.setMinimumSize(new java.awt.Dimension(85, 23));
        jButtonNouveau1.setPreferredSize(new java.awt.Dimension(85, 23));
        jButtonNouveau1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jButtonNouveau1StateChanged(evt);
            }
        });
        jButtonNouveau1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonNouveau1MouseClicked(evt);
            }
        });
        jButtonNouveau1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNouveau1ActionPerformed(evt);
            }
        });

        jButtonEnregistrer2.setText("Enregistrer");
        jButtonEnregistrer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnregistrer2ActionPerformed(evt);
            }
        });

        buttonModifierCycle1.setText("Modifier");
        buttonModifierCycle1.setMaximumSize(new java.awt.Dimension(85, 23));
        buttonModifierCycle1.setMinimumSize(new java.awt.Dimension(85, 23));
        buttonModifierCycle1.setPreferredSize(new java.awt.Dimension(85, 23));
        buttonModifierCycle1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModifierCycle1ActionPerformed(evt);
            }
        });

        jButtonSupprimer2.setText("Supprimer");
        jButtonSupprimer2.setMaximumSize(new java.awt.Dimension(85, 23));
        jButtonSupprimer2.setMinimumSize(new java.awt.Dimension(85, 23));
        jButtonSupprimer2.setPreferredSize(new java.awt.Dimension(85, 23));
        jButtonSupprimer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimer2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBoutons1Layout = new javax.swing.GroupLayout(jPanelBoutons1);
        jPanelBoutons1.setLayout(jPanelBoutons1Layout);
        jPanelBoutons1Layout.setHorizontalGroup(
            jPanelBoutons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBoutons1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelBoutons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonEnregistrer2)
                    .addGroup(jPanelBoutons1Layout.createSequentialGroup()
                        .addComponent(jButtonNouveau1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addGap(10, 10, 10)
                .addGroup(jPanelBoutons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSupprimer2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonModifierCycle1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );
        jPanelBoutons1Layout.setVerticalGroup(
            jPanelBoutons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBoutons1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanelBoutons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNouveau1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonModifierCycle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanelBoutons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEnregistrer2)
                    .addComponent(jButtonSupprimer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Paramètres"));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Série");

        libelleGp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libelleGpActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Abrev.");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Libellé ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Promotion");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(abrevGP))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(serieComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(libelleGp)
                    .addComponent(promotionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(serieComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(promotionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(libelleGp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(abrevGP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout jPanelChamps4Layout = new javax.swing.GroupLayout(jPanelChamps4);
        jPanelChamps4.setLayout(jPanelChamps4Layout);
        jPanelChamps4Layout.setHorizontalGroup(
            jPanelChamps4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelChamps4Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBoutons1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelChamps4Layout.setVerticalGroup(
            jPanelChamps4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelChamps4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelChamps4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelBoutons1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelChamps4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelEntete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jPanelChamps4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelChamps3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelEntete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelChamps4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelChamps3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void groupePedagTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_groupePedagTableMouseClicked
        // TODO add your handling code here:
        int ligne = groupePedagTable.getSelectedRow();
        Object abrevObj = groupePedagTable.getValueAt(ligne, 1);
        String abrevStr = String.valueOf(abrevObj);
        abrevGP.setText(abrevStr);
        Object libGp = groupePedagTable.getValueAt(ligne, 2);
        String libGpStr = String.valueOf(libGp);
        libelleGp.setText(libGpStr);
    }//GEN-LAST:event_groupePedagTableMouseClicked

    private void libelleGpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libelleGpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_libelleGpActionPerformed

    private void jButtonSupprimer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimer2ActionPerformed
        // TODO add your handling code here:
        // Récupération de l'id de la promotion depuis la table groupePedagTable
        int ligneGp = groupePedagTable.getSelectedRow();
        Object idGpObj = groupePedagTable.getValueAt(ligneGp, 0);
        String idGpStr = String.valueOf(idGpObj);
        int idPromotion = Integer.parseInt(idGpStr);
        String req1 = "delete from GROUP_PEDAG where  ID_GROUP_PEDAG='" + idPromotion + "'";
        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            int Conf = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ces informations?");
            if (Conf == 0) {
                instruction.executeQuery(req1);
                affichetableGp();
                JOptionPane.showMessageDialog(this, "Suppression effectuée avec succès");
            } else {
                JOptionPane.showMessageDialog(this, "Suppression annulée");
            }
            connexion.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Impossible de supprimer ce Groupe Pédagogique car il est associé à d'autres enregistrements");

        }
    }//GEN-LAST:event_jButtonSupprimer2ActionPerformed

    private void buttonModifierCycle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModifierCycle1ActionPerformed
        // TODO add your handling code here:
        // Récupération de l'id de la série depuis la table serieTable
        int ligneGp = groupePedagTable.getSelectedRow();
        Object idGpObj = groupePedagTable.getValueAt(ligneGp, 0);
        String idGpStr = String.valueOf(idGpObj);
        int idGp = Integer.parseInt(idGpStr);

        String req = "update GROUP_PEDAG set GROUP_PEDAG_ABREV = '" + abrevGP.getText() + "', LIB_GROUP_PEDAG = '" + libelleGp.getText() + "' where  ID_GROUP_PEDAG = '" + idGp + "'";

        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            int Conf = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment modifier ces informations?");
            if (Conf == 0) {
                instruction.executeQuery(req);
                affichetableGp();
                JOptionPane.showMessageDialog(this, "Modification effectuée avec succès");
            } else {
                JOptionPane.showMessageDialog(this, "Modification annulée");
            }

            connexion.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur: " + e);

        }
    }//GEN-LAST:event_buttonModifierCycle1ActionPerformed

    private void jButtonEnregistrer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnregistrer2ActionPerformed
        // TODO add your handling code here:
        String serieSelected = serieComboBox.getSelectedItem().toString();
        int idSerie = returnIdSerieByLibSerie(serieSelected);
        String promotionSelected = promotionComboBox.getSelectedItem().toString();
        int idpromotion = returnIdPromotionByLibPromotion(promotionSelected);
//        if ((serieTable.getSelectedRow() == -1) || (promotionTable.getSelectedRow() == -1) || libelleGp.getText().isEmpty()) {
//            if (serieTable.getSelectedRow() == -1) {
//                JOptionPane.showMessageDialog(this, "Aucune série n'a été sélectionnée  ");
//            }
//            if (promotionTable.getSelectedRow() == -1) {
//                JOptionPane.showMessageDialog(this, "Aucune promotion n'a été sélectionnée  ");
//            }
//            if (libelleGp.getText().isEmpty()) {
//                JOptionPane.showMessageDialog(this, "Le libellé groupe pédagogique est obligatoire  ");
//            }
//        } else {
//            {*/
        // Récupération de l'id de la série depuis la table serieTable
//                int ligneSerie = serieTable.getSelectedRow();
//                Object idSerieObj = serieTable.getValueAt(ligneSerie, 0);
//                String idSerieStr = String.valueOf(idSerieObj);
//                int idSerie = Integer.parseInt(idSerieStr);

        // Récupération de l'id du cycle depuis la table cycleTable
//                int lignePromo = promotionTable.getSelectedRow();
//                Object idPromoObj = promotionTable.getValueAt(lignePromo, 0);
//                String idPromoStr = String.valueOf(idPromoObj);
//                int idPromo = Integer.parseInt(idPromoStr);
//                String promotion = libelleGp.getText();
//                String abrev = abrevGP.getText();
        String req = "insert into GROUP_PEDAG (ID_GROUP_PEDAG,GROUP_PEDAG_ABREV,LIB_GROUP_PEDAG,ID_PROMO,ID_SERIE) values (1,'" + abrevGP.getText() + "','" + libelleGp.getText() + "','" + idpromotion + "','" + idSerie + "')";
        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            int Conf = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment enregistrer ces informations?");
            if (Conf == 0) {
                instruction.executeQuery(req);
                JOptionPane.showMessageDialog(this, "Enregistrement effectué avec succès");
                affichetableGp();
            } else {
                JOptionPane.showMessageDialog(this, "Enregistrement annulé");
            }
            connexion.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur: " + e);
        }
//            }
//        }
    }//GEN-LAST:event_jButtonEnregistrer2ActionPerformed

    private void jButtonNouveau1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNouveau1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonNouveau1ActionPerformed

    private void jButtonNouveau1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNouveau1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonNouveau1MouseClicked

    private void jButtonNouveau1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jButtonNouveau1StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonNouveau1StateChanged
    public int returnIdPromotionByLibPromotion(String libPromotion) {
        // Récupération de l'id du groupe pédagogique de l'élève sélectionné
        String reqRameneGpEleve = "select *  from  PROMOTION where LIB_PROMOTION =  '" + libPromotion + "' ";
        int idGp = 0;
        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            ResultSet idGpTrouve = instruction.executeQuery(reqRameneGpEleve);
            while (idGpTrouve.next()) {
                idGp = idGpTrouve.getInt("ID_PROMO");
            }
            //fermeture de la connexion 
            instruction.close();
            connexion.close();
        } catch (Exception e) {
            e.printStackTrace();
            //JOptionPane.showMessageDialog(this, "erreur: " + e);
        }
        return idGp;
    }

    public int returnIdSerieByLibSerie(String libSerie) {
        // Récupération de l'id du groupe pédagogique de l'élève sélectionné
        String reqRameneGpEleve = "select *  from  SERIE where LIB_SERIE =  '" + libSerie + "' ";
        int idGp = 0;
        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            ResultSet idGpTrouve = instruction.executeQuery(reqRameneGpEleve);
            while (idGpTrouve.next()) {
                idGp = idGpTrouve.getInt("ID_SERIE");
            }
            //fermeture de la connexion 
            instruction.close();
            connexion.close();
        } catch (Exception e) {
            e.printStackTrace();
            //JOptionPane.showMessageDialog(this, "erreur: " + e);
        }
        return idGp;
    }

    //méthode pour l'affichge du tableau Cycle'
    private void affichetableGp() {
//       String pilote = "oracle.jdbc.driver.OracleDriver";
        DefaultTableModel model = new DefaultTableModel();
        groupePedagTable.setModel(model); //affectation du model au tableau
        model.addColumn("Code");
        model.addColumn("Abréviation");
        model.addColumn("Libellé");
        TableColumn column, column1 = null;
        column = groupePedagTable.getColumnModel().getColumn(0);
        column.setPreferredWidth(90); //
        column1 = groupePedagTable.getColumnModel().getColumn(1);
        column1.setPreferredWidth(300); //

        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            ResultSet resultat = instruction.executeQuery("select * from GROUP_PEDAG");
            int i = 0;
            while (resultat.next()) {
                int idGp = resultat.getInt("ID_GROUP_PEDAG");
                String abrevGp = resultat.getString("GROUP_PEDAG_ABREV");
                String libGp = resultat.getString("LIB_GROUP_PEDAG");
                model.addRow(new Object[]{idGp, abrevGp, libGp});
                i++;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur3: " + e);
        }
    }
    /*
     //méthode pour l'affichge du tableau Cycle'
     private void affichetableCycle() {
     //       String pilote = "oracle.jdbc.driver.OracleDriver";
     DefaultTableModel model = new DefaultTableModel();
     promotionTable.setModel(model); //affectation du model au tableau
     model.addColumn("Code");
     model.addColumn("Cycle");

     TableColumn column, column1, column2 = null;
     column = promotionTable.getColumnModel().getColumn(0);
     column.setPreferredWidth(90); //
     column1 = promotionTable.getColumnModel().getColumn(1);
     column1.setPreferredWidth(300); //
     //    column2 = cycleTable.getColumnModel().getColumn(2);
     //    column2.setPreferredWidth(300); //

     try {
     Connection connexion = Maconnexion.seconnecter();
     Statement instruction = connexion.createStatement();
     ResultSet resultat = instruction.executeQuery("select * from CYCLES");
     int i = 0;
     while (resultat.next()) {
     String codeCycle = resultat.getString("ID_CYCLES");
     String libCycle = resultat.getString("LIB_CYCLES");
     //                String unefamille=resultat.getString("LIBELLE_FAMILLE");
     //                table2.setValueAt(unnum,i,0);
     //                table2.setValueAt(unefamille,i,1);
     //                table2.setValueAt(untype,i,2);
     model.addRow(new Object[]{codeCycle, libCycle});
     i++;
     }
     } catch (Exception e) {
     JOptionPane.showMessageDialog(this, "erreur3: " + e);
     }
     }*/

    //méthode pour l'affichge du tableau Serie'
//    private void affichetableSerie() {
////       String pilote = "oracle.jdbc.driver.OracleDriver";
//        DefaultTableModel model = new DefaultTableModel();
//        serieTable.setModel(model); //affectation du model au tableau
//        model.addColumn("Code");
//        model.addColumn("Libellé");
//
//        TableColumn column, column1, column2 = null;
//        column = serieTable.getColumnModel().getColumn(0);
//        column.setPreferredWidth(90); //
//        column1 = serieTable.getColumnModel().getColumn(1);
//        column1.setPreferredWidth(300); //
////    column2 = serieTable.getColumnModel().getColumn(2);
////    column2.setPreferredWidth(300); //
//
//        try {
//            Connection connexion = Maconnexion.seconnecter();
//            Statement instruction = connexion.createStatement();
//            ResultSet resultat = instruction.executeQuery("select * from SERIE");
//            int i = 0;
//            while (resultat.next()) {
//                String codeSerie = resultat.getString("ID_SERIE");
//                String libSerie = resultat.getString("LIB_SERIE");
////                String unefamille=resultat.getString("LIBELLE_FAMILLE");
////                table2.setValueAt(unnum,i,0);
////                table2.setValueAt(unefamille,i,1);
////                table2.setValueAt(untype,i,2);
//                model.addRow(new Object[]{codeSerie, libSerie});
//                i++;
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "erreur3: " + e);
//        }
//    }
    public int enregGp() {
//        int idSerie = 0;
//        int idPromo = 0;
//        // Récupération de la série depuis la table serieTable;
//        int ligneSerie = serieTable.getSelectedRow();
//        Object idSerieObj = serieTable.getValueAt(ligneSerie, 0);
//        String idSerieStr = String.valueOf(idSerieObj);
//        idSerie = Integer.parseInt(idSerieStr);
//        // Récupération du cycle depuis la table promotionTable;
//        int lignePromo = promotionTable.getSelectedRow();
//        Object idPromoObj = promotionTable.getValueAt(lignePromo, 0);
//        String idPromoStr = String.valueOf(idPromoObj);
//        idPromo = Integer.parseInt(idPromoStr);
//        JOptionPane.showMessageDialog(this, "ID_PROMO " + idPromo);
//        JOptionPane.showMessageDialog(this, "ID_SERIE " + idSerie);
        String serieSelected = serieComboBox.getSelectedItem().toString();
        int idSerie = returnIdSerieByLibSerie(serieSelected);
        String promotionSelected = promotionComboBox.getSelectedItem().toString();
        int idpromotion = returnIdPromotionByLibPromotion(promotionSelected);
        try {
            Connection connexion = Maconnexion.seconnecter();
            String req = "INSERT INTO GROUP_PEDAG (ID_GROUP_PEDAG,GROUP_PEDAG_ABREV,LIB_GROUP_PEDAG,ID_PROMO,ID_SERIE) VALUES (1,'" + abrevGP.getText() + "','" + libelleGp.getText() + "','" + idpromotion + "','" + idSerie + "')";
            Statement instruction = connexion.createStatement();
            instruction.executeQuery(req);
            JOptionPane.showMessageDialog(this, "Enregistrement effectué avec succès");
            connexion.close();
            return 1;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur: " + e);
            return 0;
        }
    }

//    private boolean verifieSaisie2() {
//        int idSerie = 0;
//        int idPromo = 0;
//        // Récupération de la série depuis la table serieTable;
//        int ligneSerie = serieTable.getSelectedRow();
//        Object idSerieObj = serieTable.getValueAt(ligneSerie, 0);
//        String idSerieStr = String.valueOf(idSerieObj);
//        idSerie = Integer.parseInt(idSerieStr);
//        // Récupération du cycle depuis la table promotionTable;
//        int lignePromo = promotionTable.getSelectedRow();
//        Object idPromoObj = promotionTable.getValueAt(lignePromo, 0);
//        String idPromoStr = String.valueOf(idPromoObj);
//        idPromo = Integer.parseInt(idPromoStr);
//
//        boolean correct = true;
//        if (idSerie == -1) {
//            JOptionPane.showMessageDialog(this, "Veuillez choisir la série SVP!");
//            correct = false;
//        } else if (abrevGP.getText().equals("")) {
//            JOptionPane.showMessageDialog(this, "Veuillez renseigner l'abréviation SVP!");
//            correct = false;
//        } else if (libelleGp.getText().equals("")) {
//            JOptionPane.showMessageDialog(this, "Veuillez renseigner le libellé SVP!");
//
//            correct = false;
//        } else if (idPromo == -1) {
//            JOptionPane.showMessageDialog(this, "Veuillez choisir la promotion SVP!");
//            correct = false;
//        }
//
//        return correct;
//    }
//méthode pour l'affichge du tableau Promotion'
//    private void affichetablePromotion() {
////       String pilote = "oracle.jdbc.driver.OracleDriver";
//        DefaultTableModel model = new DefaultTableModel();
//        promotionTable.setModel(model); //affectation du model au tableau
//        model.addColumn("Code");
//        model.addColumn("Abréviation");
//        model.addColumn("Promotion");
//
//        TableColumn column, column1, column2 = null;
//        column = promotionTable.getColumnModel().getColumn(0);
//        column.setPreferredWidth(90); //
//        column1 = promotionTable.getColumnModel().getColumn(1);
//        column1.setPreferredWidth(300); //
//        column2 = promotionTable.getColumnModel().getColumn(2);
//        column2.setPreferredWidth(300); //
//
//        try {
//            Connection connexion = Maconnexion.seconnecter();
//            Statement instruction = connexion.createStatement();
//            ResultSet resultat = instruction.executeQuery("select * from PROMOTION");
//            int i = 0;
//            while (resultat.next()) {
//                String codePromotion = resultat.getString("ID_PROMO");
//                String abrevPromo = resultat.getString("PROMO_ABREV");
//                String libPromotion = resultat.getString("LIB_PROMOTION");
//                model.addRow(new Object[]{codePromotion, abrevPromo, libPromotion});
//                i++;
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "erreur3: " + e);
//        }
//    }
    private void connectComboPromotion() {
        promotionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{}));
        try {
            try (Connection connexion = Maconnexion.seconnecter()) {
                Statement instruction = connexion.createStatement();
                ResultSet resultatGp = instruction.executeQuery("SELECT LIB_PROMOTION FROM PROMOTION");
                while (resultatGp.next()) {
                    String classe = resultatGp.getString("LIB_PROMOTION");
                    Object obj2 = (Object) classe;
                    promotionComboBox.addItem(obj2);
                }
                //fermeture de la connexion
                instruction.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur: " + e);
        }
    }

    private void connectComboSerie() {
        serieComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{}));
        try {
            try (Connection connexion = Maconnexion.seconnecter()) {
                Statement instruction = connexion.createStatement();
                ResultSet resultatGp = instruction.executeQuery("SELECT LIB_SERIE FROM SERIE");
                while (resultatGp.next()) {
                    String classe = resultatGp.getString("LIB_SERIE");
                    Object obj2 = (Object) classe;
                    serieComboBox.addItem(obj2);
                }
                //fermeture de la connexion
                instruction.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur: " + e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GroupePadagJFrame_autre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GroupePadagJFrame_autre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GroupePadagJFrame_autre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GroupePadagJFrame_autre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GroupePadagJFrame_autre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField abrevGP;
    private javax.swing.JButton buttonModifierCycle1;
    private javax.swing.JTable groupePedagTable;
    private javax.swing.JButton jButtonEnregistrer2;
    private javax.swing.JButton jButtonNouveau1;
    private javax.swing.JButton jButtonSupprimer2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelBoutons1;
    private javax.swing.JPanel jPanelChamps3;
    private javax.swing.JPanel jPanelChamps4;
    private javax.swing.JPanel jPanelEntete;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField libelleGp;
    private javax.swing.JComboBox promotionComboBox;
    private javax.swing.JComboBox serieComboBox;
    // End of variables declaration//GEN-END:variables
}
