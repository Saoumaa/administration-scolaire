/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scolaire.ihm;

import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author obama
 */
public class PromotionJFrame extends javax.swing.JFrame {

    /**
     * Creates new form AnneeJFrame
     */
    public PromotionJFrame() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("log.png")));
        affichetableSerie();
        affichetableCycle();
        affichetablePromotion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelEntete = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelChamps = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        serieTable = new javax.swing.JTable();
        jPanelTrimestre = new javax.swing.JPanel();
        jPanelChamps3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        promotionTable = new javax.swing.JTable();
        jPanelBoutons1 = new javax.swing.JPanel();
        jButtonFermer2 = new javax.swing.JButton();
        jButtonNouveau1 = new javax.swing.JButton();
        jButtonEnregistrer2 = new javax.swing.JButton();
        buttonModifierCycle1 = new javax.swing.JButton();
        jButtonSupprimer2 = new javax.swing.JButton();
        jPanelChamps4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        abrevPromotion = new javax.swing.JTextField();
        libellePromotion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanelChamps2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cycleTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanelEntete.setBackground(new java.awt.Color(0, 102, 51));

        jLabel1.setFont(new java.awt.Font("Wide Latin", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PROMOTION");

        javax.swing.GroupLayout jPanelEnteteLayout = new javax.swing.GroupLayout(jPanelEntete);
        jPanelEntete.setLayout(jPanelEnteteLayout);
        jPanelEnteteLayout.setHorizontalGroup(
            jPanelEnteteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnteteLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelEnteteLayout.setVerticalGroup(
            jPanelEnteteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnteteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelChamps.setBackground(new java.awt.Color(204, 255, 204));
        jPanelChamps.setBorder(javax.swing.BorderFactory.createTitledBorder("Série"));

        serieTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Code", "Libellé"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        serieTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                serieTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(serieTable);

        javax.swing.GroupLayout jPanelChampsLayout = new javax.swing.GroupLayout(jPanelChamps);
        jPanelChamps.setLayout(jPanelChampsLayout);
        jPanelChampsLayout.setHorizontalGroup(
            jPanelChampsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanelChampsLayout.setVerticalGroup(
            jPanelChampsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelChampsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        jPanelChamps3.setBackground(new java.awt.Color(204, 255, 204));
        jPanelChamps3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Liste des promotions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 51))); // NOI18N

        promotionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Code", "Libellé"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        promotionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                promotionTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(promotionTable);

        jPanelBoutons1.setBackground(new java.awt.Color(204, 255, 204));
        jPanelBoutons1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Actions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 51))); // NOI18N

        jButtonFermer2.setText("Fermer");
        jButtonFermer2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonFermer2MouseClicked(evt);
            }
        });
        jButtonFermer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermer2ActionPerformed(evt);
            }
        });

        jButtonNouveau1.setText("Nouveau");
        jButtonNouveau1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jButtonNouveau1StateChanged(evt);
            }
        });
        jButtonNouveau1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonNouveau1MouseClicked(evt);
            }
        });
        jButtonNouveau1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNouveau1ActionPerformed(evt);
            }
        });

        jButtonEnregistrer2.setText("Enregistrer");
        jButtonEnregistrer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnregistrer2ActionPerformed(evt);
            }
        });

        buttonModifierCycle1.setText("Modifier");
        buttonModifierCycle1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModifierCycle1ActionPerformed(evt);
            }
        });

        jButtonSupprimer2.setText("Supprimer");
        jButtonSupprimer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimer2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBoutons1Layout = new javax.swing.GroupLayout(jPanelBoutons1);
        jPanelBoutons1.setLayout(jPanelBoutons1Layout);
        jPanelBoutons1Layout.setHorizontalGroup(
            jPanelBoutons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBoutons1Layout.createSequentialGroup()
                .addComponent(jButtonNouveau1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonEnregistrer2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonModifierCycle1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSupprimer2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonFermer2)
                .addGap(23, 23, 23))
        );
        jPanelBoutons1Layout.setVerticalGroup(
            jPanelBoutons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBoutons1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanelBoutons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFermer2)
                    .addComponent(jButtonNouveau1)
                    .addComponent(jButtonEnregistrer2)
                    .addComponent(buttonModifierCycle1)
                    .addComponent(jButtonSupprimer2)))
        );

        javax.swing.GroupLayout jPanelChamps3Layout = new javax.swing.GroupLayout(jPanelChamps3);
        jPanelChamps3.setLayout(jPanelChamps3Layout);
        jPanelChamps3Layout.setHorizontalGroup(
            jPanelChamps3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBoutons1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, Short.MAX_VALUE)
            .addGroup(jPanelChamps3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelChamps3Layout.setVerticalGroup(
            jPanelChamps3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelChamps3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelBoutons1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelChamps4.setBackground(new java.awt.Color(204, 255, 204));
        jPanelChamps4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Promotion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 51))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Abréviation");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Promotion");

        javax.swing.GroupLayout jPanelChamps4Layout = new javax.swing.GroupLayout(jPanelChamps4);
        jPanelChamps4.setLayout(jPanelChamps4Layout);
        jPanelChamps4Layout.setHorizontalGroup(
            jPanelChamps4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelChamps4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(abrevPromotion, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(libellePromotion, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanelChamps4Layout.setVerticalGroup(
            jPanelChamps4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelChamps4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelChamps4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelChamps4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(libellePromotion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelChamps4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(abrevPromotion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelTrimestreLayout = new javax.swing.GroupLayout(jPanelTrimestre);
        jPanelTrimestre.setLayout(jPanelTrimestreLayout);
        jPanelTrimestreLayout.setHorizontalGroup(
            jPanelTrimestreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelChamps3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelChamps4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelTrimestreLayout.setVerticalGroup(
            jPanelTrimestreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTrimestreLayout.createSequentialGroup()
                .addComponent(jPanelChamps4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelChamps3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jPanelChamps2.setBackground(new java.awt.Color(204, 255, 204));
        jPanelChamps2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cycle"));

        cycleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Code", "Cycle"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        cycleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cycleTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(cycleTable);

        javax.swing.GroupLayout jPanelChamps2Layout = new javax.swing.GroupLayout(jPanelChamps2);
        jPanelChamps2.setLayout(jPanelChamps2Layout);
        jPanelChamps2Layout.setHorizontalGroup(
            jPanelChamps2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanelChamps2Layout.setVerticalGroup(
            jPanelChamps2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelChamps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelChamps2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelTrimestre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanelEntete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelEntete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelChamps, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelChamps2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanelTrimestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cycleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cycleTableMouseClicked
        // TODO add your handling code here:
        int ligne = cycleTable.getSelectedRow();
        String unCodeCycle, unLibelleCycle;
        //converti et affecte la référence de la pièce justificative du tableau à sa  zone de texte correspondant pour une modification
        Object unCycle = cycleTable.getValueAt(ligne, 0);
        String code = String.valueOf(unCycle);
        //        codeCycle.setText(code);
        Object cycle = cycleTable.getValueAt(ligne, 1);
        String lecycle = String.valueOf(cycle);
//        abrevPromotion.setText(lecycle);
    }//GEN-LAST:event_cycleTableMouseClicked

    private void jButtonFermer2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFermer2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonFermer2MouseClicked

    private void jButtonFermer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermer2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonFermer2ActionPerformed

    private void jButtonNouveau1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jButtonNouveau1StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonNouveau1StateChanged

    private void jButtonNouveau1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNouveau1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonNouveau1MouseClicked

    private void jButtonNouveau1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNouveau1ActionPerformed
        // TODO add your handling code here:
        abrevPromotion.setText("");
        libellePromotion.setText("");
    }//GEN-LAST:event_jButtonNouveau1ActionPerformed

    private void jButtonEnregistrer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnregistrer2ActionPerformed
        // TODO add your handling code here:

        if ((serieTable.getSelectedRow() == -1) || (cycleTable.getSelectedRow() == -1) || libellePromotion.getText().isEmpty()) {
            if (serieTable.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Aucune série n'a été sélectionnée  ");
            }
            if (cycleTable.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Aucun cycle n'a été sélectionné  ");
            }
            if (libellePromotion.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Le libellé de la promotion est obligatoire  ");
            }
        } else {

            // Récupération de l'id de la série depuis la table serieTable
            int ligneSerie = serieTable.getSelectedRow();
            Object idSerieObj = serieTable.getValueAt(ligneSerie, 0);
            String idSerieStr = String.valueOf(idSerieObj);
            int idSerie = Integer.parseInt(idSerieStr);

            // Récupération de l'id du cycle depuis la table cycleTable
            int ligneCycle = cycleTable.getSelectedRow();
            Object idCycleObj = cycleTable.getValueAt(ligneCycle, 0);
            String idCycleStr = String.valueOf(idCycleObj);
            int idCycle = Integer.parseInt(idCycleStr);
            String promotion = libellePromotion.getText();
            String abrev = abrevPromotion.getText();
            String req = "insert into PROMOTION (ID_PROMO,LIB_PROMOTION,PROMO_ABREV,ID_CYCLES,ID_SERIE) values (1,'" + promotion + "','" + abrev + "','" + idCycle + "','" + idSerie + "')";
            try {
                Connection connexion = Maconnexion.seconnecter();
                Statement instruction = connexion.createStatement();
                int Conf = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment enregistrer ces informations?");
                if (Conf == 0) {
                    instruction.executeQuery(req);
                    JOptionPane.showMessageDialog(this, "Enregistrement effectué avec succès");
                    affichetablePromotion();
                } else {
                    JOptionPane.showMessageDialog(this, "Enregistrement annulé");
                }
                connexion.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "erreur: " + e);
            }
        }
    }//GEN-LAST:event_jButtonEnregistrer2ActionPerformed

    private void buttonModifierCycle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModifierCycle1ActionPerformed
        // TODO add your handling code here:
        int idSerie = 0;
        int idCycle = 0;
        int ligneCycle = cycleTable.getSelectedRow();
        Object idCycleObj = cycleTable.getValueAt(ligneCycle, 0);
        String idCycleStr = String.valueOf(idCycleObj);
        idCycle = Integer.parseInt(idCycleStr);
        int ligneSerie = serieTable.getSelectedRow();
        Object idSerieObj = serieTable.getValueAt(ligneSerie, 0);
        String idSerieStr = String.valueOf(idSerieObj);
        idSerie = Integer.parseInt(idSerieStr);

//        if (!(controleSelectCycle(cycleTable.getSelectedRow()) || controleSelectSerie(serieTable.getSelectedRow()))) {
//            JOptionPane.showMessageDialog(this, "Veuillez sélectionner les lignes utiles");
//        } else {
        // Récupération de l'id de la promotion depuis la table promotionTable
        int idPromo = 0;
        try {
            int lignePromo = promotionTable.getSelectedRow();
            Object idPromoObj = promotionTable.getValueAt(lignePromo, 0);
            String idPromoStr = String.valueOf(idPromoObj);
            idPromo = Integer.parseInt(idPromoStr);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Aucun cycle n'a été sélectionné ");
        }
        String promotion = libellePromotion.getText();
        String abrev = abrevPromotion.getText();
        String req = "update PROMOTION set LIB_PROMOTION = '" + promotion + "', PROMO_ABREV = '" + abrev + "', ID_CYCLES ='" + idCycle + "', ID_SERIE = '" + idSerie + "' where  ID_PROMO ='" + idPromo + "'";
        try {
            try ( //Class.forName(pilote);
                    Connection connexion = Maconnexion.seconnecter()) {
                Statement instruction = connexion.createStatement();
                int Conf = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment modifier ces informations?");
                if (Conf == 0) {
                    instruction.executeQuery(req);
                    affichetablePromotion();
                    JOptionPane.showMessageDialog(this, "Modification effectuée avec succès");
                } else {
                    JOptionPane.showMessageDialog(this, "Modification annulée");
                }
            }
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, "erreur: " + e);

        }
//        }
    }//GEN-LAST:event_buttonModifierCycle1ActionPerformed

    private void jButtonSupprimer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimer2ActionPerformed
        // TODO add your handling code here:
        // Récupération de l'id de la promotion depuis la table promotionTable
        int ligne = promotionTable.getSelectedRow();
        Object idPromoObj = promotionTable.getValueAt(ligne, 0);
        String idPromoStr = String.valueOf(idPromoObj);
        int idPromo = Integer.parseInt(idPromoStr);
        String req = "delete from PROMOTION where  ID_PROMO='" + idPromo + "'";
        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            int Conf = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer cette promotion ?");
            if (Conf == 0) {
                instruction.executeQuery(req);
                affichetablePromotion();
                JOptionPane.showMessageDialog(this, "Suppression effectuée avec succès");
            } else {
                JOptionPane.showMessageDialog(this, "Suppression annulée");
            }
            connexion.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Impossible de supprimer cette Promotion car elle contient des Groupes Pédagogiques");
        }
    }//GEN-LAST:event_jButtonSupprimer2ActionPerformed

    private void promotionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_promotionTableMouseClicked
        // TODO add your handling code here:
//        int ligneSerie = serieTable.getSelectedRow();
//        JOptionPane.showMessageDialog(this, "N° de ligne de Série sélectionnée " + ligneSerie);
//        int ligneCycle = serieTable.getSelectedRow();
//        JOptionPane.showMessageDialog(this, "N° de ligne de Cycle sélectionnée " + ligneCycle);

        int ligne = promotionTable.getSelectedRow();
        String unCodeCycle, unLibelleCycle;
        //converti et affecte la référence de la pièce justificative du tableau à sa  zone de texte correspondant pour une modification
//        Object unCode = promotionTable.getValueAt(ligne, 0);
//        String code = String.valueOf(unCode);
//        Promotion.setText(lecycle);
        Object abrevObj = promotionTable.getValueAt(ligne, 1);
        String abrev = String.valueOf(abrevObj);
        abrevPromotion.setText(abrev);
        Object libPromoObj = promotionTable.getValueAt(ligne, 2);
        String libPromo = String.valueOf(libPromoObj);
        libellePromotion.setText(libPromo);
    }//GEN-LAST:event_promotionTableMouseClicked

    private void serieTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serieTableMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_serieTableMouseClicked

    //méthode pour l'affichge du tableau Cycle'
    private void affichetableCycle() {
//       String pilote = "oracle.jdbc.driver.OracleDriver";
        DefaultTableModel model = new DefaultTableModel();
        cycleTable.setModel(model); //affectation du model au tableau
        model.addColumn("Code");
        model.addColumn("Cycle");

        TableColumn column, column1, column2 = null;
        column = cycleTable.getColumnModel().getColumn(0);
        column.setPreferredWidth(90); //
        column1 = cycleTable.getColumnModel().getColumn(1);
        column1.setPreferredWidth(300); //
//    column2 = cycleTable.getColumnModel().getColumn(2);
//    column2.setPreferredWidth(300); //

        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            ResultSet resultat = instruction.executeQuery("select * from CYCLES");
            int i = 0;
            while (resultat.next()) {
                String codeCycle = resultat.getString("ID_CYCLES");
                String libCycle = resultat.getString("LIB_CYCLES");
//                String unefamille=resultat.getString("LIBELLE_FAMILLE");
//                table2.setValueAt(unnum,i,0);
//                table2.setValueAt(unefamille,i,1);
//                table2.setValueAt(untype,i,2);
                model.addRow(new Object[]{codeCycle, libCycle});
                i++;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur3: " + e);
        }
    }
//méthode pour l'affichge du tableau Promotion'

    private void affichetablePromotion() {
//       String pilote = "oracle.jdbc.driver.OracleDriver";
        DefaultTableModel model = new DefaultTableModel();
        promotionTable.setModel(model); //affectation du model au tableau
        model.addColumn("Code");
        model.addColumn("Abréviation");
        model.addColumn("Promotion");
        model.addColumn("idSerie");
        model.addColumn("idCycle");
        TableColumn column, column1, column2, column3, column4 = null;
        column = promotionTable.getColumnModel().getColumn(0);
        column.setPreferredWidth(90); //
        column1 = promotionTable.getColumnModel().getColumn(1);
        column1.setPreferredWidth(300); //
        column2 = promotionTable.getColumnModel().getColumn(2);
        column2.setPreferredWidth(300); //
        column3 = promotionTable.getColumnModel().getColumn(3);
        column3.setPreferredWidth(300); //
        column4 = promotionTable.getColumnModel().getColumn(4);
        column4.setPreferredWidth(300); //
        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            ResultSet resultat = instruction.executeQuery("select * from PROMOTION");
            int i = 0;
            while (resultat.next()) {
                String codePromotion = resultat.getString("ID_PROMO");
                String abrevPromo = resultat.getString("PROMO_ABREV");
                String libPromotion = resultat.getString("LIB_PROMOTION");
                String idCycle = resultat.getString("ID_CYCLES");
                String idSerie = resultat.getString("ID_SERIE");
                model.addRow(new Object[]{codePromotion, abrevPromo, libPromotion, idSerie, idCycle});
                i++;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur3: " + e);
        }
    }

    //méthode pour l'affichge du tableau Serie'
    private void affichetableSerie() {
//       String pilote = "oracle.jdbc.driver.OracleDriver";
        DefaultTableModel model = new DefaultTableModel();
        serieTable.setModel(model); //affectation du model au tableau
        model.addColumn("Code");
        model.addColumn("Libellé");

        TableColumn column, column1, column2 = null;
        column = serieTable.getColumnModel().getColumn(0);
        column.setPreferredWidth(90); //
        column1 = serieTable.getColumnModel().getColumn(1);
        column1.setPreferredWidth(300); //
//    column2 = serieTable.getColumnModel().getColumn(2);
//    column2.setPreferredWidth(300); //

        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            ResultSet resultat = instruction.executeQuery("select * from SERIE");
            int i = 0;
            while (resultat.next()) {
                String codeSerie = resultat.getString("ID_SERIE");
                String libSerie = resultat.getString("LIB_SERIE");
//                String unefamille=resultat.getString("LIBELLE_FAMILLE");
//                table2.setValueAt(unnum,i,0);
//                table2.setValueAt(unefamille,i,1);
//                table2.setValueAt(untype,i,2);
                model.addRow(new Object[]{codeSerie, libSerie});
                i++;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur3: " + e);
        }
    }

    public boolean controleSelectCycle(int idCycle) {
        boolean selected = false;
        // Récupération de l'id du cycle depuis la table cycleTable
//        int idCycle = 0;
        try {
            int ligneCycle = cycleTable.getSelectedRow();
            Object idCycleObj = cycleTable.getValueAt(ligneCycle, 0);
            String idCycleStr = String.valueOf(idCycleObj);
            idCycle = Integer.parseInt(idCycleStr);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Aucun cycle n'a été sélectionné ");
        }

        return true;
    }

    public boolean controleSelectSerie(int ligneSerie) {
        boolean selected = false;
        // Récupération de l'id de la série depuis la table serieTable
        int idSerie = 0;
        try {
            ligneSerie = serieTable.getSelectedRow();
            Object idSerieObj = serieTable.getValueAt(ligneSerie, 0);
            String idSerieStr = String.valueOf(idSerieObj);
            idSerie = Integer.parseInt(idSerieStr);
            selected = true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Aucune série n'a été sélectionné ");
        }

        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PromotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PromotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PromotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PromotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PromotionJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField abrevPromotion;
    private javax.swing.JButton buttonModifierCycle1;
    private javax.swing.JTable cycleTable;
    private javax.swing.JButton jButtonEnregistrer2;
    private javax.swing.JButton jButtonFermer2;
    private javax.swing.JButton jButtonNouveau1;
    private javax.swing.JButton jButtonSupprimer2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanelBoutons1;
    private javax.swing.JPanel jPanelChamps;
    private javax.swing.JPanel jPanelChamps2;
    private javax.swing.JPanel jPanelChamps3;
    private javax.swing.JPanel jPanelChamps4;
    private javax.swing.JPanel jPanelEntete;
    private javax.swing.JPanel jPanelTrimestre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField libellePromotion;
    private javax.swing.JTable promotionTable;
    private javax.swing.JTable serieTable;
    // End of variables declaration//GEN-END:variables
}
