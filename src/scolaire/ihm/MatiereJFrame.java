/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scolaire.ihm;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author obama
 */
public class MatiereJFrame extends javax.swing.JFrame {

    /**
     * Creates new form AnneeJFrame
     */
    public MatiereJFrame() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("log.png")));
        affichetableMatiere();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelEntete = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelBoutons = new javax.swing.JPanel();
        jButtonNouveau = new javax.swing.JButton();
        jButtonEnregistrer = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jButtonFermer = new javax.swing.JButton();
        jPanelChamps5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        matiereTable = new javax.swing.JTable();
        LibMatiereTextField = new javax.swing.JTextField();
        NomjLabel = new javax.swing.JLabel();
        MatriculejLabel = new javax.swing.JLabel();
        codeMatiereTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanelEntete.setBackground(new java.awt.Color(0, 102, 51));

        jLabel1.setFont(new java.awt.Font("Wide Latin", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MATIERES ENSEIGNEES");

        javax.swing.GroupLayout jPanelEnteteLayout = new javax.swing.GroupLayout(jPanelEntete);
        jPanelEntete.setLayout(jPanelEnteteLayout);
        jPanelEnteteLayout.setHorizontalGroup(
            jPanelEnteteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelEnteteLayout.setVerticalGroup(
            jPanelEnteteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnteteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelBoutons.setBackground(new java.awt.Color(204, 255, 204));
        jPanelBoutons.setBorder(javax.swing.BorderFactory.createTitledBorder("Matières"));

        jButtonNouveau.setText("Nouveau");
        jButtonNouveau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonNouveauMouseClicked(evt);
            }
        });

        jButtonEnregistrer.setText("Enregistrer");
        jButtonEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnregistrerActionPerformed(evt);
            }
        });

        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jButtonFermer.setText("Fermer");
        jButtonFermer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonFermerMouseClicked(evt);
            }
        });
        jButtonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBoutonsLayout = new javax.swing.GroupLayout(jPanelBoutons);
        jPanelBoutons.setLayout(jPanelBoutonsLayout);
        jPanelBoutonsLayout.setHorizontalGroup(
            jPanelBoutonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBoutonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonNouveau)
                .addGap(26, 26, 26)
                .addComponent(jButtonEnregistrer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jButtonModifier)
                .addGap(18, 18, 18)
                .addComponent(jButtonSupprimer)
                .addGap(18, 18, 18)
                .addComponent(jButtonFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelBoutonsLayout.setVerticalGroup(
            jPanelBoutonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBoutonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButtonNouveau)
                .addComponent(jButtonEnregistrer)
                .addComponent(jButtonModifier)
                .addComponent(jButtonSupprimer)
                .addComponent(jButtonFermer))
        );

        jPanelChamps5.setBackground(new java.awt.Color(204, 255, 204));
        jPanelChamps5.setBorder(javax.swing.BorderFactory.createTitledBorder("Matières"));

        matiereTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Code", "Libellé"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        matiereTable.setColumnSelectionAllowed(true);
        matiereTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                matiereTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(matiereTable);
        matiereTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        NomjLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        NomjLabel.setText("Libellé");

        MatriculejLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        MatriculejLabel.setText("Code");

        codeMatiereTextField.setEditable(false);
        codeMatiereTextField.setEnabled(false);
        codeMatiereTextField.setOpaque(false);
        codeMatiereTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeMatiereTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelChamps5Layout = new javax.swing.GroupLayout(jPanelChamps5);
        jPanelChamps5.setLayout(jPanelChamps5Layout);
        jPanelChamps5Layout.setHorizontalGroup(
            jPanelChamps5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelChamps5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelChamps5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MatriculejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NomjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelChamps5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codeMatiereTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LibMatiereTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanelChamps5Layout.setVerticalGroup(
            jPanelChamps5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelChamps5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelChamps5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MatriculejLabel)
                    .addComponent(codeMatiereTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelChamps5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NomjLabel)
                    .addComponent(LibMatiereTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelEntete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelChamps5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBoutons, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelEntete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelChamps5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanelBoutons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFermerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFermerMouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonFermerMouseClicked

    private void jButtonNouveauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNouveauMouseClicked
        // TODO add your handling code here:
        codeMatiereTextField.setText("");
        LibMatiereTextField.setText("");
        jButtonEnregistrer.setEnabled(true);
    }//GEN-LAST:event_jButtonNouveauMouseClicked

    private void codeMatiereTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeMatiereTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeMatiereTextFieldActionPerformed

    private void jButtonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermerActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonFermerActionPerformed

    private void matiereTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_matiereTableMouseClicked
        // TODO add your handling code here:
        int ligne = matiereTable.getSelectedRow();
        Object libMatObj = matiereTable.getValueAt(ligne, 1);
        String libMatStr = String.valueOf(libMatObj);
        LibMatiereTextField.setText(libMatStr);
        jButtonEnregistrer.setEnabled(false);
    }//GEN-LAST:event_matiereTableMouseClicked

    private void jButtonEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnregistrerActionPerformed
        // TODO add your handling code here:
//                int idMat=0;
//        int ligne = matiereTable.getSelectedRow();
//        Object libMatObj = matiereTable.getValueAt(ligne, 1);
//        String libMatStr = String.valueOf(libMatObj);
//        LibMatiereTextField.setText(libMatStr);
        if (!doublonMatiere(LibMatiereTextField.getText())) {
            String req1 = "insert into MATIERE (LIB_MATIERE) values ('" + LibMatiereTextField.getText() + "')";
            try {
                Connection connexion = Maconnexion.seconnecter();
                Statement instruction = connexion.createStatement();
                int Conf = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment enregistrer ces informations?");
                if (Conf == 0) {
                    int a = 0;
                    a = matiereTable.getColumnCount();
                    for (int i = 0; i < a; i++) {

                    }
                    instruction.executeQuery(req1);
                    affichetableMatiere();
                    JOptionPane.showMessageDialog(this, "Enregistrement effectué avec succès");
                } else {
                    JOptionPane.showMessageDialog(this, "Enregistrement annulé");
                }

                connexion.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "erreur: " + e);

            }
        } else {
            JOptionPane.showMessageDialog(this, "La matière " + LibMatiereTextField.getText() + " a déjà été enregistrée");
        }
    }//GEN-LAST:event_jButtonEnregistrerActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        // TODO add your handling code here:
        int ligne = matiereTable.getSelectedRow();
        Object idMatObj = matiereTable.getValueAt(ligne, 0);
        Object libMatObj = matiereTable.getValueAt(ligne, 1);
        String idMatStr = String.valueOf(idMatObj);
        String libMatStr = String.valueOf(libMatObj);
        int idMat = Integer.parseInt(idMatStr);
        LibMatiereTextField.setText(libMatStr);
        String libMAT = LibMatiereTextField.getText();
        String req1 = "update MATIERE set LIB_MATIERE = '" + libMAT + "' where  ID_MATIERE ='" + idMat + "'";
        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            int Conf = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment modifier ces informations?");
            if (Conf == 0) {
                instruction.executeQuery(req1);
                affichetableMatiere();
                JOptionPane.showMessageDialog(this, "Modification effectuée avec succès");
            } else {
                JOptionPane.showMessageDialog(this, "Modification annulée");
            }

            connexion.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur: " + e);

        }
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        // TODO add your handling code here:
        int ligne = matiereTable.getSelectedRow();
        Object idMatObj = matiereTable.getValueAt(ligne, 0);
        Object libMatObj = matiereTable.getValueAt(ligne, 1);
        String idMatStr = String.valueOf(idMatObj);
        String libMatStr = String.valueOf(libMatObj);
        int idMat = Integer.parseInt(idMatStr);
        String req1 = "delete from MATIERE where  ID_MATIERE='" + idMat + "'";
        try {
            //Class.forName(pilote);
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            int Conf = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ces informations?");
            if (Conf == 0) {
                instruction.executeQuery(req1);
                affichetableMatiere();
                JOptionPane.showMessageDialog(this, "Suppression effectuée avec succès");
            } else {
                JOptionPane.showMessageDialog(this, "Suppression annulée");
            }

            connexion.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur: " + e);

        }
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    //méthode pour l'affichge du tableau Matiere'
    private void affichetableMatiere() {
//       String pilote = "oracle.jdbc.driver.OracleDriver";
        DefaultTableModel model = new DefaultTableModel();
        matiereTable.setModel(model); //affectation du model au tableau
        model.addColumn("Code");
        model.addColumn("Matière");

        TableColumn column, column1 = null;
        column = matiereTable.getColumnModel().getColumn(0);
        column.setPreferredWidth(90); //
        column1 = matiereTable.getColumnModel().getColumn(1);
        column1.setPreferredWidth(300); //
        try {
            Connection connexion = Maconnexion.seconnecter();
            Statement instruction = connexion.createStatement();
            ResultSet resultat = instruction.executeQuery("select * from MATIERE");
            int i = 0;
            while (resultat.next()) {
                String idMat = resultat.getString("ID_MATIERE");
                String libMat = resultat.getString("LIB_MATIERE");
                model.addRow(new Object[]{idMat, libMat});
                i++;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "erreur3: " + e);
        }
    }

    public boolean doublonMatiere(String matiere) {
        boolean matriculeTrouvail = false;
        String reqRameneGpEleve = "select  LIB_MATIERE  from  MATIERE ";
        try {
            try (Connection connexion = Maconnexion.seconnecter();
                    Statement instruction = connexion.createStatement()) {
                ResultSet lesEleve = instruction.executeQuery(reqRameneGpEleve);
                while (lesEleve.next()) {
                    if (matiere.equalsIgnoreCase(lesEleve.getString("LIB_MATIERE"))) {
                        matriculeTrouvail = true;
                    }
                }
            }
        } catch (Exception e) {
//            return matriculeTrouvail;
        }
        return matriculeTrouvail;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatiereJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatiereJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatiereJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatiereJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatiereJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField LibMatiereTextField;
    private javax.swing.JLabel MatriculejLabel;
    private javax.swing.JLabel NomjLabel;
    private javax.swing.JTextField codeMatiereTextField;
    private javax.swing.JButton jButtonEnregistrer;
    private javax.swing.JButton jButtonFermer;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonNouveau;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanelBoutons;
    private javax.swing.JPanel jPanelChamps5;
    private javax.swing.JPanel jPanelEntete;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable matiereTable;
    // End of variables declaration//GEN-END:variables
}
